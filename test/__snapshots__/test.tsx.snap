// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ChangePasswordForm> with password 1`] = `
<div
  id="client-test-div"
>
  <Component
    idPrefix="test"
    labelsFirst={false}
    onSuccess={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
  >
    <Formik
      initialValues={
        Object {
          "email": undefined,
          "newPassword": "",
          "oldPassword": "",
        }
      }
      onSubmit={[Function]}
      validate={[Function]}
    >
      <Form>
        <form
          action="#"
          onReset={[Function]}
          onSubmit={[Function]}
        >
          <div
            className="form-label-group"
          >
            <Component
              flip={false}
            >
              <Field
                autoFocus={true}
                className="form-control"
                id="test-change-password-old-password"
                key=".0"
                name="oldPassword"
                placeholder="Old Password"
                required={true}
                type="password"
              >
                <input
                  autoFocus={true}
                  className="form-control"
                  id="test-change-password-old-password"
                  name="oldPassword"
                  onBlur={[Function]}
                  onChange={[Function]}
                  placeholder="Old Password"
                  required={true}
                  type="password"
                  value="hunter2"
                />
              </Field>
              <label
                htmlFor="test-change-password-old-password"
                key=".1"
              >
                Old Password
              </label>
            </Component>
          </div>
          <div
            className="form-label-group"
          >
            <Component
              flip={false}
            >
              <Field
                className="form-control"
                id="test-change-password-new-password"
                key=".0"
                name="newPassword"
                placeholder="New Password"
                required={true}
                type="password"
              >
                <input
                  className="form-control"
                  id="test-change-password-new-password"
                  name="newPassword"
                  onBlur={[Function]}
                  onChange={[Function]}
                  placeholder="New Password"
                  required={true}
                  type="password"
                  value="hunter3"
                />
              </Field>
              <label
                htmlFor="test-change-password-new-password"
                key=".1"
              >
                New Password
              </label>
            </Component>
          </div>
          <DebouncedPasswordScore
            password="hunter3"
            username="bob@bob.com"
          >
            <Component
              password="hunter3"
              username="bob@bob.com"
            />
          </DebouncedPasswordScore>
          <button
            className="btn btn-lg btn-primary "
            type="submit"
          >
            Change Password
          </button>
          <ErrorMessage />
        </form>
      </Form>
    </Formik>
  </Component>
</div>
`;

exports[`<ChangePasswordForm> without password 1`] = `
<div
  id="client-test-div"
>
  <Component
    idPrefix="test"
    labelsFirst={false}
    onSuccess={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
  >
    <Formik
      initialValues={
        Object {
          "email": "bob@bob.com",
          "newPassword": "",
          "oldPassword": undefined,
        }
      }
      onSubmit={[Function]}
      validate={[Function]}
    >
      <Form>
        <form
          action="#"
          onReset={[Function]}
          onSubmit={[Function]}
        >
          <div
            className="form-label-group"
          >
            <Component
              flip={false}
            >
              <Field
                className="form-control"
                id="test-change-password-email"
                key=".0"
                name="email"
                placeholder="email"
                required={true}
                type="text"
              >
                <input
                  className="form-control"
                  id="test-change-password-email"
                  name="email"
                  onBlur={[Function]}
                  onChange={[Function]}
                  placeholder="email"
                  required={true}
                  type="text"
                  value="bob@bob.com"
                />
              </Field>
              <label
                htmlFor="test-change-password-email"
                key=".1"
              >
                Email
              </label>
            </Component>
          </div>
          <div
            className="form-label-group"
          >
            <Component
              flip={false}
            >
              <Field
                autoFocus={true}
                className="form-control"
                id="test-change-password-new-password"
                key=".0"
                name="newPassword"
                placeholder="New Password"
                required={true}
                type="password"
              >
                <input
                  autoFocus={true}
                  className="form-control"
                  id="test-change-password-new-password"
                  name="newPassword"
                  onBlur={[Function]}
                  onChange={[Function]}
                  placeholder="New Password"
                  required={true}
                  type="password"
                  value="hunter3"
                />
              </Field>
              <label
                htmlFor="test-change-password-new-password"
                key=".1"
              >
                New Password
              </label>
            </Component>
          </div>
          <DebouncedPasswordScore
            password="hunter3"
            username="bob@bob.com"
          >
            <Component
              password="hunter3"
              username="bob@bob.com"
            />
          </DebouncedPasswordScore>
          <button
            className="btn btn-lg btn-primary "
            type="submit"
          >
            Set Password
          </button>
          <ErrorMessage />
        </form>
      </Form>
    </Formik>
  </Component>
</div>
`;

exports[`<LoginForm> login 1`] = `
<div
  id="client-test-div"
>
  <LoginForm
    idPrefix="test"
    onLogin={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
  >
    <OauthLogin
      onLogin={[Function]}
    >
      <SocialButtons
        className="my-3"
        popupWindow={
          Object {
            "close": [Function],
            "open": [Function],
          }
        }
      />
      <Formik
        initialValues={
          Object {
            "email": "",
            "password": "",
            "stayLoggedIn": false,
          }
        }
        onSubmit={[Function]}
        validate={[Function]}
      >
        <Form>
          <form
            action="#"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <div
              className="form-label-group mb-2"
            >
              <Component
                flip={true}
              >
                <label
                  htmlFor="test-login-email"
                  key=".1"
                >
                  Email address
                </label>
                <Field
                  autoFocus={true}
                  className="form-control"
                  id="test-login-email"
                  key=".0"
                  name="email"
                  placeholder="Email address"
                  required={true}
                  type="email"
                >
                  <input
                    autoFocus={true}
                    className="form-control"
                    id="test-login-email"
                    name="email"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Email address"
                    required={true}
                    type="email"
                    value="bob@bob.com"
                  />
                </Field>
              </Component>
            </div>
            <div
              className="form-label-group mb-2"
            >
              <Component
                flip={true}
              >
                <label
                  htmlFor="test-login-password"
                  key=".1"
                >
                  Password
                </label>
                <Field
                  className="form-control"
                  id="test-login-password"
                  key=".0"
                  name="password"
                  placeholder="Password"
                  required={true}
                  type="password"
                >
                  <input
                    className="form-control"
                    id="test-login-password"
                    name="password"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Password"
                    required={true}
                    type="password"
                    value="hunter2"
                  />
                </Field>
              </Component>
            </div>
            <div
              className="custom-control custom-checkbox mb-2"
            >
              <Field
                className="custom-control-input"
                id="test-login-stay-logged-in"
                name="stayLoggedIn"
                type="checkbox"
              >
                <input
                  checked={true}
                  className="custom-control-input"
                  id="test-login-stay-logged-in"
                  name="stayLoggedIn"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="checkbox"
                  value={true}
                />
              </Field>
              <label
                className="custom-control-label"
                htmlFor="test-login-stay-logged-in"
              >
                Remember me
              </label>
            </div>
            <div
              className="mb-3 justify-content-between d-flex"
            >
              <button
                className="btn btn-primary"
                id="login-button"
                type="submit"
              >
                Sign in
              </button>
              <button
                className="btn btn-outline-primary"
                id="forgot-pw-button"
                onClick={[Function]}
                type="button"
              >
                Forgot Password?
              </button>
            </div>
            <ErrorMessage />
          </form>
        </Form>
      </Formik>
    </OauthLogin>
  </LoginForm>
</div>
`;

exports[`<LoginForm>/<AccountCreationForm> forgot password 1`] = `
<div
  id="client-test-div"
>
  <LoginForm
    idPrefix="test"
  >
    <OauthLogin
      onLogin={[Function]}
    >
      <SocialButtons
        className="my-3"
        popupWindow={
          Object {
            "close": [Function],
            "open": [Function],
          }
        }
      />
      <Formik
        initialValues={
          Object {
            "email": "",
            "password": "",
            "stayLoggedIn": false,
          }
        }
        onSubmit={[Function]}
        validate={[Function]}
      >
        <Form>
          <form
            action="#"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <div
              className="form-label-group mb-2"
            >
              <Component
                flip={true}
              >
                <label
                  htmlFor="test-login-email"
                  key=".1"
                >
                  Email address
                </label>
                <Field
                  autoFocus={true}
                  className="form-control"
                  id="test-login-email"
                  key=".0"
                  name="email"
                  placeholder="Email address"
                  required={true}
                  type="email"
                >
                  <input
                    autoFocus={true}
                    className="form-control"
                    id="test-login-email"
                    name="email"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Email address"
                    required={true}
                    type="email"
                    value=""
                  />
                </Field>
              </Component>
            </div>
            <div
              className="form-label-group mb-2"
            >
              <Component
                flip={true}
              >
                <label
                  htmlFor="test-login-password"
                  key=".1"
                >
                  Password
                </label>
                <Field
                  className="form-control"
                  id="test-login-password"
                  key=".0"
                  name="password"
                  placeholder="Password"
                  required={true}
                  type="password"
                >
                  <input
                    className="form-control"
                    id="test-login-password"
                    name="password"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Password"
                    required={true}
                    type="password"
                    value=""
                  />
                </Field>
              </Component>
            </div>
            <div
              className="custom-control custom-checkbox mb-2"
            >
              <Field
                className="custom-control-input"
                id="test-login-stay-logged-in"
                name="stayLoggedIn"
                type="checkbox"
              >
                <input
                  checked={false}
                  className="custom-control-input"
                  id="test-login-stay-logged-in"
                  name="stayLoggedIn"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="checkbox"
                  value={false}
                />
              </Field>
              <label
                className="custom-control-label"
                htmlFor="test-login-stay-logged-in"
              >
                Remember me
              </label>
            </div>
            <div
              className="mb-3 justify-content-between d-flex"
            >
              <button
                className="btn btn-primary"
                id="login-button"
                type="submit"
              >
                Sign in
              </button>
              <button
                className="btn btn-outline-primary"
                id="forgot-pw-button"
                onClick={[Function]}
                type="button"
              >
                Forgot Password?
              </button>
            </div>
            <ErrorMessage />
          </form>
        </Form>
      </Formik>
    </OauthLogin>
  </LoginForm>
  <AccountCreationForm>
    <OauthLogin>
      <SocialButtons
        className="my-3"
        popupWindow={
          Object {
            "close": [Function],
            "open": [Function],
          }
        }
      />
      <Formik
        initialValues={
          Object {
            "email": "",
            "password": "",
            "stayLoggedIn": false,
          }
        }
        onSubmit={[Function]}
        validate={[Function]}
      >
        <Form>
          <form
            action="#"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <div
              className="form-label-group mb-2"
            >
              <Component
                flip={true}
              >
                <label
                  htmlFor="um3kfiekd-account-creation-email"
                  key=".1"
                >
                  Email address
                </label>
                <Field
                  autoFocus={true}
                  className="form-control"
                  id="um3kfiekd-account-creation-email"
                  key=".0"
                  name="email"
                  placeholder="Email address"
                  required={true}
                  type="email"
                >
                  <input
                    autoFocus={true}
                    className="form-control"
                    id="um3kfiekd-account-creation-email"
                    name="email"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Email address"
                    required={true}
                    type="email"
                    value=""
                  />
                </Field>
              </Component>
            </div>
            <div
              className="form-label-group mb-2"
            >
              <Component
                flip={true}
              >
                <label
                  htmlFor="um3kfiekd-account-creation-password"
                  key=".1"
                >
                  Password
                </label>
                <Field
                  className="form-control"
                  id="um3kfiekd-account-creation-password"
                  key=".0"
                  name="password"
                  placeholder="Password"
                  required={true}
                  type="password"
                >
                  <input
                    className="form-control"
                    id="um3kfiekd-account-creation-password"
                    name="password"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Password"
                    required={true}
                    type="password"
                    value=""
                  />
                </Field>
              </Component>
            </div>
            <div
              className="custom-control custom-checkbox mb-2"
            >
              <Field
                className="custom-control-input"
                id="um3kfiekd-account-creation-stay-logged-in"
                name="stayLoggedIn"
                type="checkbox"
              >
                <input
                  checked={false}
                  className="custom-control-input"
                  id="um3kfiekd-account-creation-stay-logged-in"
                  name="stayLoggedIn"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="checkbox"
                  value={false}
                />
              </Field>
              <label
                className="custom-control-label"
                htmlFor="um3kfiekd-account-creation-stay-logged-in"
              >
                Remember me
              </label>
            </div>
            <Component
              password=""
              username=""
            />
            <div
              className="mb-3"
            >
              <button
                className="btn btn-primary"
                type="submit"
              >
                Create Account
              </button>
            </div>
          </form>
        </Form>
      </Formik>
      <UserCreateError />
    </OauthLogin>
  </AccountCreationForm>
</div>
`;

exports[`<LoginForm>/<AccountCreationForm> forgot password 2`] = `
<div
  id="client-test-div"
>
  <LoginForm
    idPrefix="test"
  >
    <div>
      <div>
        Enter your email to get a password reset link.
      </div>
      <RequestPasswordResetForm
        idPrefix="test"
        labelsFirst={true}
        onCancel={[Function]}
      >
        <Formik
          initialValues={
            Object {
              "email": "",
            }
          }
          onSubmit={[Function]}
          validate={[Function]}
        >
          <ErrorMessage />
          <Form
            id="test-request-password-reset-form"
          >
            <form
              action="#"
              id="test-request-password-reset-form"
              onReset={[Function]}
              onSubmit={[Function]}
            >
              <div
                className="form-label-group mb-2"
              >
                <Component
                  flip={true}
                >
                  <label
                    htmlFor="test-request-password-reset-email"
                    key=".1"
                  >
                    Email address
                  </label>
                  <Field
                    autoFocus={true}
                    className="form-control"
                    id="test-request-password-reset-email"
                    key=".0"
                    name="email"
                    placeholder="Email address"
                    required={true}
                    type="email"
                  >
                    <input
                      autoFocus={true}
                      className="form-control"
                      id="test-request-password-reset-email"
                      name="email"
                      onBlur={[Function]}
                      onChange={[Function]}
                      placeholder="Email address"
                      required={true}
                      type="email"
                      value=""
                    />
                  </Field>
                </Component>
              </div>
              <div
                className="d-flex justify-content-between mb-3"
              >
                <button
                  className="btn btn-primary "
                  id="request-pw-reset-button"
                  type="submit"
                >
                  Submit
                </button>
                <button
                  className="btn btn-outline-secondary"
                  onClick={[Function]}
                  type="button"
                >
                  Cancel
                </button>
              </div>
            </form>
          </Form>
        </Formik>
      </RequestPasswordResetForm>
    </div>
  </LoginForm>
  <AccountCreationForm>
    <OauthLogin>
      <SocialButtons
        className="my-3"
        popupWindow={
          Object {
            "close": [Function],
            "open": [Function],
          }
        }
      />
      <Formik
        initialValues={
          Object {
            "email": "",
            "password": "",
            "stayLoggedIn": false,
          }
        }
        onSubmit={[Function]}
        validate={[Function]}
      >
        <Form>
          <form
            action="#"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <div
              className="form-label-group mb-2"
            >
              <Component
                flip={true}
              >
                <label
                  htmlFor="um3kfiekd-account-creation-email"
                  key=".1"
                >
                  Email address
                </label>
                <Field
                  autoFocus={true}
                  className="form-control"
                  id="um3kfiekd-account-creation-email"
                  key=".0"
                  name="email"
                  placeholder="Email address"
                  required={true}
                  type="email"
                >
                  <input
                    autoFocus={true}
                    className="form-control"
                    id="um3kfiekd-account-creation-email"
                    name="email"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Email address"
                    required={true}
                    type="email"
                    value=""
                  />
                </Field>
              </Component>
            </div>
            <div
              className="form-label-group mb-2"
            >
              <Component
                flip={true}
              >
                <label
                  htmlFor="um3kfiekd-account-creation-password"
                  key=".1"
                >
                  Password
                </label>
                <Field
                  className="form-control"
                  id="um3kfiekd-account-creation-password"
                  key=".0"
                  name="password"
                  placeholder="Password"
                  required={true}
                  type="password"
                >
                  <input
                    className="form-control"
                    id="um3kfiekd-account-creation-password"
                    name="password"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Password"
                    required={true}
                    type="password"
                    value=""
                  />
                </Field>
              </Component>
            </div>
            <div
              className="custom-control custom-checkbox mb-2"
            >
              <Field
                className="custom-control-input"
                id="um3kfiekd-account-creation-stay-logged-in"
                name="stayLoggedIn"
                type="checkbox"
              >
                <input
                  checked={false}
                  className="custom-control-input"
                  id="um3kfiekd-account-creation-stay-logged-in"
                  name="stayLoggedIn"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="checkbox"
                  value={false}
                />
              </Field>
              <label
                className="custom-control-label"
                htmlFor="um3kfiekd-account-creation-stay-logged-in"
              >
                Remember me
              </label>
            </div>
            <Component
              password=""
              username=""
            />
            <div
              className="mb-3"
            >
              <button
                className="btn btn-primary"
                type="submit"
              >
                Create Account
              </button>
            </div>
          </form>
        </Form>
      </Formik>
      <UserCreateError />
    </OauthLogin>
  </AccountCreationForm>
</div>
`;

exports[`<LoginForm>/<AccountCreationForm> oauth 1`] = `
<div
  id="client-test-div"
>
  <LoginForm>
    <OauthLogin
      onLogin={[Function]}
    >
      <SocialButtons
        className="my-3"
        popupWindow={
          Object {
            "close": [Function],
            "open": [Function],
          }
        }
      >
        <div
          className="my-3"
        >
          <style>
            
          .facebook-login-btn-3kdic7az9 {
            color: white !important;
            background-color: #4267b2 !important;
            border-color: #4267b2 !important;
          }
          .facebook-login-btn-3kdic7az9:hover {
            color: #4267b2 !important;
            background-color: white !important;
          }

          .google-login-btn-3kdic7az9 {
            color: white !important;
            background-color: #ea4335 !important;
            border-color: #ea4335 !important;
          }
          .google-login-btn-3kdic7az9:hover {
            color: #ea4335 !important;
            background-color: white !important;
          }

          .github-login-btn-3kdic7az9 {
            color: white !important;
            background-color: rgb(21, 20, 19) !important;
            border-color: rgb(21, 20, 19) !important;
          }
          .github-login-btn-3kdic7az9:hover {
            color: rgb(21, 20, 19) !important;
            background-color: white !important;
          }
      
          </style>
          <SocialLoginButton
            buttonClasses="github-login-btn-3kdic7az9"
            onClick={[Function]}
          >
            <div
              className="d-flex justify-content-center my-2"
            >
              <button
                className="btn btn-block btn-outline-primary d-flex align-items-center justify-content-between github-login-btn-3kdic7az9"
                onClick={[Function]}
              >
                <GithubLogo
                  size="2em"
                >
                  <Icon
                    fill="currentColor"
                    icon={
                      Object {
                        "children": Array [
                          Object {
                            "attribs": Object {},
                            "children": Array [],
                            "name": "title",
                          },
                          Object {
                            "attribs": Object {},
                            "children": Array [],
                            "name": "desc",
                          },
                          Object {
                            "attribs": Object {},
                            "children": Array [],
                            "name": "defs",
                          },
                          Object {
                            "attribs": Object {
                              "fill": "none",
                              "fill-rule": "evenodd",
                              "id": "Octicons",
                              "stroke": "none",
                              "stroke-width": "1",
                            },
                            "children": Array [
                              Object {
                                "attribs": Object {
                                  "fill": "#000000",
                                  "id": "mark-github",
                                },
                                "children": Array [
                                  Object {
                                    "attribs": Object {
                                      "fill": "#000000",
                                      "id": "mark-github",
                                    },
                                    "children": Array [
                                      Object {
                                        "attribs": Object {
                                          "d": "M8,0 C3.58,0 0,3.58 0,8 C0,11.54 2.29,14.53 5.47,15.59 C5.87,15.66 6.02,15.42 6.02,15.21 C6.02,15.02 6.01,14.39 6.01,13.72 C4,14.09 3.48,13.23 3.32,12.78 C3.23,12.55 2.84,11.84 2.5,11.65 C2.22,11.5 1.82,11.13 2.49,11.12 C3.12,11.11 3.57,11.7 3.72,11.94 C4.44,13.15 5.59,12.81 6.05,12.6 C6.12,12.08 6.33,11.73 6.56,11.53 C4.78,11.33 2.92,10.64 2.92,7.58 C2.92,6.71 3.23,5.99 3.74,5.43 C3.66,5.23 3.38,4.41 3.82,3.31 C3.82,3.31 4.49,3.1 6.02,4.13 C6.66,3.95 7.34,3.86 8.02,3.86 C8.7,3.86 9.38,3.95 10.02,4.13 C11.55,3.09 12.22,3.31 12.22,3.31 C12.66,4.41 12.38,5.23 12.3,5.43 C12.81,5.99 13.12,6.7 13.12,7.58 C13.12,10.65 11.25,11.33 9.47,11.53 C9.76,11.78 10.01,12.26 10.01,13.01 C10.01,14.08 10,14.94 10,15.21 C10,15.42 10.15,15.67 10.55,15.59 C13.71,14.53 16,11.53 16,8 C16,3.58 12.42,0 8,0 L8,0 Z",
                                          "id": "Shape",
                                        },
                                        "children": Array [
                                          Object {
                                            "attribs": Object {
                                              "d": "M8,0 C3.58,0 0,3.58 0,8 C0,11.54 2.29,14.53 5.47,15.59 C5.87,15.66 6.02,15.42 6.02,15.21 C6.02,15.02 6.01,14.39 6.01,13.72 C4,14.09 3.48,13.23 3.32,12.78 C3.23,12.55 2.84,11.84 2.5,11.65 C2.22,11.5 1.82,11.13 2.49,11.12 C3.12,11.11 3.57,11.7 3.72,11.94 C4.44,13.15 5.59,12.81 6.05,12.6 C6.12,12.08 6.33,11.73 6.56,11.53 C4.78,11.33 2.92,10.64 2.92,7.58 C2.92,6.71 3.23,5.99 3.74,5.43 C3.66,5.23 3.38,4.41 3.82,3.31 C3.82,3.31 4.49,3.1 6.02,4.13 C6.66,3.95 7.34,3.86 8.02,3.86 C8.7,3.86 9.38,3.95 10.02,4.13 C11.55,3.09 12.22,3.31 12.22,3.31 C12.66,4.41 12.38,5.23 12.3,5.43 C12.81,5.99 13.12,6.7 13.12,7.58 C13.12,10.65 11.25,11.33 9.47,11.53 C9.76,11.78 10.01,12.26 10.01,13.01 C10.01,14.08 10,14.94 10,15.21 C10,15.42 10.15,15.67 10.55,15.59 C13.71,14.53 16,11.53 16,8 C16,3.58 12.42,0 8,0 L8,0 Z",
                                              "id": "Shape",
                                            },
                                            "children": Array [],
                                            "name": "path",
                                          },
                                        ],
                                        "name": "path",
                                      },
                                    ],
                                    "name": "g",
                                  },
                                ],
                                "name": "g",
                              },
                            ],
                            "name": "g",
                          },
                        ],
                        "viewBox": "0 0 16 16",
                      }
                    }
                    size="2em"
                    tag="i"
                  >
                    <i
                      fill="currentColor"
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <SvgIcon
                        icon={
                          Object {
                            "children": Array [
                              Object {
                                "attribs": Object {},
                                "children": Array [],
                                "name": "title",
                              },
                              Object {
                                "attribs": Object {},
                                "children": Array [],
                                "name": "desc",
                              },
                              Object {
                                "attribs": Object {},
                                "children": Array [],
                                "name": "defs",
                              },
                              Object {
                                "attribs": Object {
                                  "fill": "none",
                                  "fill-rule": "evenodd",
                                  "id": "Octicons",
                                  "stroke": "none",
                                  "stroke-width": "1",
                                },
                                "children": Array [
                                  Object {
                                    "attribs": Object {
                                      "fill": "#000000",
                                      "id": "mark-github",
                                    },
                                    "children": Array [
                                      Object {
                                        "attribs": Object {
                                          "fill": "#000000",
                                          "id": "mark-github",
                                        },
                                        "children": Array [
                                          Object {
                                            "attribs": Object {
                                              "d": "M8,0 C3.58,0 0,3.58 0,8 C0,11.54 2.29,14.53 5.47,15.59 C5.87,15.66 6.02,15.42 6.02,15.21 C6.02,15.02 6.01,14.39 6.01,13.72 C4,14.09 3.48,13.23 3.32,12.78 C3.23,12.55 2.84,11.84 2.5,11.65 C2.22,11.5 1.82,11.13 2.49,11.12 C3.12,11.11 3.57,11.7 3.72,11.94 C4.44,13.15 5.59,12.81 6.05,12.6 C6.12,12.08 6.33,11.73 6.56,11.53 C4.78,11.33 2.92,10.64 2.92,7.58 C2.92,6.71 3.23,5.99 3.74,5.43 C3.66,5.23 3.38,4.41 3.82,3.31 C3.82,3.31 4.49,3.1 6.02,4.13 C6.66,3.95 7.34,3.86 8.02,3.86 C8.7,3.86 9.38,3.95 10.02,4.13 C11.55,3.09 12.22,3.31 12.22,3.31 C12.66,4.41 12.38,5.23 12.3,5.43 C12.81,5.99 13.12,6.7 13.12,7.58 C13.12,10.65 11.25,11.33 9.47,11.53 C9.76,11.78 10.01,12.26 10.01,13.01 C10.01,14.08 10,14.94 10,15.21 C10,15.42 10.15,15.67 10.55,15.59 C13.71,14.53 16,11.53 16,8 C16,3.58 12.42,0 8,0 L8,0 Z",
                                              "id": "Shape",
                                            },
                                            "children": Array [
                                              Object {
                                                "attribs": Object {
                                                  "d": "M8,0 C3.58,0 0,3.58 0,8 C0,11.54 2.29,14.53 5.47,15.59 C5.87,15.66 6.02,15.42 6.02,15.21 C6.02,15.02 6.01,14.39 6.01,13.72 C4,14.09 3.48,13.23 3.32,12.78 C3.23,12.55 2.84,11.84 2.5,11.65 C2.22,11.5 1.82,11.13 2.49,11.12 C3.12,11.11 3.57,11.7 3.72,11.94 C4.44,13.15 5.59,12.81 6.05,12.6 C6.12,12.08 6.33,11.73 6.56,11.53 C4.78,11.33 2.92,10.64 2.92,7.58 C2.92,6.71 3.23,5.99 3.74,5.43 C3.66,5.23 3.38,4.41 3.82,3.31 C3.82,3.31 4.49,3.1 6.02,4.13 C6.66,3.95 7.34,3.86 8.02,3.86 C8.7,3.86 9.38,3.95 10.02,4.13 C11.55,3.09 12.22,3.31 12.22,3.31 C12.66,4.41 12.38,5.23 12.3,5.43 C12.81,5.99 13.12,6.7 13.12,7.58 C13.12,10.65 11.25,11.33 9.47,11.53 C9.76,11.78 10.01,12.26 10.01,13.01 C10.01,14.08 10,14.94 10,15.21 C10,15.42 10.15,15.67 10.55,15.59 C13.71,14.53 16,11.53 16,8 C16,3.58 12.42,0 8,0 L8,0 Z",
                                                  "id": "Shape",
                                                },
                                                "children": Array [],
                                                "name": "path",
                                              },
                                            ],
                                            "name": "path",
                                          },
                                        ],
                                        "name": "g",
                                      },
                                    ],
                                    "name": "g",
                                  },
                                ],
                                "name": "g",
                              },
                            ],
                            "viewBox": "0 0 16 16",
                          }
                        }
                        size="2em"
                      >
                        <svg
                          fill="currentColor"
                          height="2em"
                          style={
                            Object {
                              "display": "inline-block",
                              "verticalAlign": "middle",
                            }
                          }
                          viewBox="0 0 16 16"
                          width="2em"
                        >
                          <title
                            key="0"
                          />
                          <desc
                            key="1"
                          />
                          <defs
                            key="2"
                          />
                          <g
                            fill="none"
                            fillRule="evenodd"
                            id="Octicons"
                            key="3"
                            stroke="currentColor"
                            strokeWidth="1"
                          >
                            <g
                              id="mark-github"
                              key="0"
                            >
                              <g
                                id="mark-github"
                                key="0"
                              >
                                <path
                                  d="M8,0 C3.58,0 0,3.58 0,8 C0,11.54 2.29,14.53 5.47,15.59 C5.87,15.66 6.02,15.42 6.02,15.21 C6.02,15.02 6.01,14.39 6.01,13.72 C4,14.09 3.48,13.23 3.32,12.78 C3.23,12.55 2.84,11.84 2.5,11.65 C2.22,11.5 1.82,11.13 2.49,11.12 C3.12,11.11 3.57,11.7 3.72,11.94 C4.44,13.15 5.59,12.81 6.05,12.6 C6.12,12.08 6.33,11.73 6.56,11.53 C4.78,11.33 2.92,10.64 2.92,7.58 C2.92,6.71 3.23,5.99 3.74,5.43 C3.66,5.23 3.38,4.41 3.82,3.31 C3.82,3.31 4.49,3.1 6.02,4.13 C6.66,3.95 7.34,3.86 8.02,3.86 C8.7,3.86 9.38,3.95 10.02,4.13 C11.55,3.09 12.22,3.31 12.22,3.31 C12.66,4.41 12.38,5.23 12.3,5.43 C12.81,5.99 13.12,6.7 13.12,7.58 C13.12,10.65 11.25,11.33 9.47,11.53 C9.76,11.78 10.01,12.26 10.01,13.01 C10.01,14.08 10,14.94 10,15.21 C10,15.42 10.15,15.67 10.55,15.59 C13.71,14.53 16,11.53 16,8 C16,3.58 12.42,0 8,0 L8,0 Z"
                                  id="Shape"
                                  key="0"
                                >
                                  <path
                                    d="M8,0 C3.58,0 0,3.58 0,8 C0,11.54 2.29,14.53 5.47,15.59 C5.87,15.66 6.02,15.42 6.02,15.21 C6.02,15.02 6.01,14.39 6.01,13.72 C4,14.09 3.48,13.23 3.32,12.78 C3.23,12.55 2.84,11.84 2.5,11.65 C2.22,11.5 1.82,11.13 2.49,11.12 C3.12,11.11 3.57,11.7 3.72,11.94 C4.44,13.15 5.59,12.81 6.05,12.6 C6.12,12.08 6.33,11.73 6.56,11.53 C4.78,11.33 2.92,10.64 2.92,7.58 C2.92,6.71 3.23,5.99 3.74,5.43 C3.66,5.23 3.38,4.41 3.82,3.31 C3.82,3.31 4.49,3.1 6.02,4.13 C6.66,3.95 7.34,3.86 8.02,3.86 C8.7,3.86 9.38,3.95 10.02,4.13 C11.55,3.09 12.22,3.31 12.22,3.31 C12.66,4.41 12.38,5.23 12.3,5.43 C12.81,5.99 13.12,6.7 13.12,7.58 C13.12,10.65 11.25,11.33 9.47,11.53 C9.76,11.78 10.01,12.26 10.01,13.01 C10.01,14.08 10,14.94 10,15.21 C10,15.42 10.15,15.67 10.55,15.59 C13.71,14.53 16,11.53 16,8 C16,3.58 12.42,0 8,0 L8,0 Z"
                                    id="Shape"
                                    key="0"
                                  />
                                </path>
                              </g>
                            </g>
                          </g>
                        </svg>
                      </SvgIcon>
                    </i>
                  </Icon>
                </GithubLogo>
                <div
                  className="flex-grow-1 font-weight-bold"
                >
                  Login with GitHub
                </div>
              </button>
            </div>
          </SocialLoginButton>
          <SocialLoginButton
            buttonClasses="facebook-login-btn-3kdic7az9"
            onClick={[Function]}
          >
            <div
              className="d-flex justify-content-center my-2"
            >
              <button
                className="btn btn-block btn-outline-primary d-flex align-items-center justify-content-between facebook-login-btn-3kdic7az9"
                onClick={[Function]}
              >
                <FbLogo
                  size="2em"
                >
                  <Icon
                    fill="currentColor"
                    icon={
                      Object {
                        "children": Array [
                          Object {
                            "attribs": Object {
                              "d": "M1451 128q35 0 60 25t25 60v1366q0 35-25 60t-60 25h-391v-595h199l30-232h-229v-148q0-56 23.5-84t91.5-28l122-1v-207q-63-9-178-9-136 0-217.5 80t-81.5 226v171h-200v232h200v595h-735q-35 0-60-25t-25-60v-1366q0-35 25-60t60-25h1366z",
                            },
                            "name": "path",
                          },
                        ],
                        "viewBox": "0 0 1536 1792",
                      }
                    }
                    size="2em"
                    tag="i"
                  >
                    <i
                      fill="currentColor"
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <SvgIcon
                        icon={
                          Object {
                            "children": Array [
                              Object {
                                "attribs": Object {
                                  "d": "M1451 128q35 0 60 25t25 60v1366q0 35-25 60t-60 25h-391v-595h199l30-232h-229v-148q0-56 23.5-84t91.5-28l122-1v-207q-63-9-178-9-136 0-217.5 80t-81.5 226v171h-200v232h200v595h-735q-35 0-60-25t-25-60v-1366q0-35 25-60t60-25h1366z",
                                },
                                "name": "path",
                              },
                            ],
                            "viewBox": "0 0 1536 1792",
                          }
                        }
                        size="2em"
                      >
                        <svg
                          fill="currentColor"
                          height="2em"
                          style={
                            Object {
                              "display": "inline-block",
                              "verticalAlign": "middle",
                            }
                          }
                          viewBox="0 0 1536 1792"
                          width="2em"
                        >
                          <path
                            d="M1451 128q35 0 60 25t25 60v1366q0 35-25 60t-60 25h-391v-595h199l30-232h-229v-148q0-56 23.5-84t91.5-28l122-1v-207q-63-9-178-9-136 0-217.5 80t-81.5 226v171h-200v232h200v595h-735q-35 0-60-25t-25-60v-1366q0-35 25-60t60-25h1366z"
                            key="0"
                          />
                        </svg>
                      </SvgIcon>
                    </i>
                  </Icon>
                </FbLogo>
                <div
                  className="flex-grow-1 font-weight-bold"
                >
                  Login with Facebook
                </div>
              </button>
            </div>
          </SocialLoginButton>
          <SocialLoginButton
            buttonClasses="google-login-btn-3kdic7az9"
            onClick={[Function]}
          >
            <div
              className="d-flex justify-content-center my-2"
            >
              <button
                className="btn btn-block btn-outline-primary d-flex align-items-center justify-content-between google-login-btn-3kdic7az9"
                onClick={[Function]}
              >
                <GoogleLogo
                  size="2em"
                >
                  <Icon
                    fill="currentColor"
                    icon={
                      Object {
                        "children": Array [
                          Object {
                            "attribs": Object {
                              "d": "M768 786h725q12 67 12 128 0 217-91 387.5t-259.5 266.5-386.5 96q-157 0-299-60.5t-245-163.5-163.5-245-60.5-299 60.5-299 163.5-245 245-163.5 299-60.5q300 0 515 201l-209 201q-123-119-306-119-129 0-238.5 65t-173.5 176.5-64 243.5 64 243.5 173.5 176.5 238.5 65q87 0 160-24t120-60 82-82 51.5-87 22.5-78h-436v-264z",
                            },
                            "name": "path",
                          },
                        ],
                        "viewBox": "0 0 1536 1792",
                      }
                    }
                    size="2em"
                    tag="i"
                  >
                    <i
                      fill="currentColor"
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <SvgIcon
                        icon={
                          Object {
                            "children": Array [
                              Object {
                                "attribs": Object {
                                  "d": "M768 786h725q12 67 12 128 0 217-91 387.5t-259.5 266.5-386.5 96q-157 0-299-60.5t-245-163.5-163.5-245-60.5-299 60.5-299 163.5-245 245-163.5 299-60.5q300 0 515 201l-209 201q-123-119-306-119-129 0-238.5 65t-173.5 176.5-64 243.5 64 243.5 173.5 176.5 238.5 65q87 0 160-24t120-60 82-82 51.5-87 22.5-78h-436v-264z",
                                },
                                "name": "path",
                              },
                            ],
                            "viewBox": "0 0 1536 1792",
                          }
                        }
                        size="2em"
                      >
                        <svg
                          fill="currentColor"
                          height="2em"
                          style={
                            Object {
                              "display": "inline-block",
                              "verticalAlign": "middle",
                            }
                          }
                          viewBox="0 0 1536 1792"
                          width="2em"
                        >
                          <path
                            d="M768 786h725q12 67 12 128 0 217-91 387.5t-259.5 266.5-386.5 96q-157 0-299-60.5t-245-163.5-163.5-245-60.5-299 60.5-299 163.5-245 245-163.5 299-60.5q300 0 515 201l-209 201q-123-119-306-119-129 0-238.5 65t-173.5 176.5-64 243.5 64 243.5 173.5 176.5 238.5 65q87 0 160-24t120-60 82-82 51.5-87 22.5-78h-436v-264z"
                            key="0"
                          />
                        </svg>
                      </SvgIcon>
                    </i>
                  </Icon>
                </GoogleLogo>
                <div
                  className="flex-grow-1 font-weight-bold"
                >
                  Login with Google
                </div>
              </button>
            </div>
          </SocialLoginButton>
        </div>
      </SocialButtons>
      <Formik
        initialValues={
          Object {
            "email": "",
            "password": "",
            "stayLoggedIn": false,
          }
        }
        onSubmit={[Function]}
        validate={[Function]}
      >
        <Form>
          <form
            action="#"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <div
              className="form-label-group mb-2"
            >
              <Component
                flip={true}
              >
                <label
                  htmlFor="um3kfiekd-login-email"
                  key=".1"
                >
                  Email address
                </label>
                <Field
                  autoFocus={true}
                  className="form-control"
                  id="um3kfiekd-login-email"
                  key=".0"
                  name="email"
                  placeholder="Email address"
                  required={true}
                  type="email"
                >
                  <input
                    autoFocus={true}
                    className="form-control"
                    id="um3kfiekd-login-email"
                    name="email"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Email address"
                    required={true}
                    type="email"
                    value=""
                  />
                </Field>
              </Component>
            </div>
            <div
              className="form-label-group mb-2"
            >
              <Component
                flip={true}
              >
                <label
                  htmlFor="um3kfiekd-login-password"
                  key=".1"
                >
                  Password
                </label>
                <Field
                  className="form-control"
                  id="um3kfiekd-login-password"
                  key=".0"
                  name="password"
                  placeholder="Password"
                  required={true}
                  type="password"
                >
                  <input
                    className="form-control"
                    id="um3kfiekd-login-password"
                    name="password"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Password"
                    required={true}
                    type="password"
                    value=""
                  />
                </Field>
              </Component>
            </div>
            <div
              className="custom-control custom-checkbox mb-2"
            >
              <Field
                className="custom-control-input"
                id="um3kfiekd-login-stay-logged-in"
                name="stayLoggedIn"
                type="checkbox"
              >
                <input
                  checked={false}
                  className="custom-control-input"
                  id="um3kfiekd-login-stay-logged-in"
                  name="stayLoggedIn"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="checkbox"
                  value={false}
                />
              </Field>
              <label
                className="custom-control-label"
                htmlFor="um3kfiekd-login-stay-logged-in"
              >
                Remember me
              </label>
            </div>
            <div
              className="mb-3 justify-content-between d-flex"
            >
              <button
                className="btn btn-primary"
                id="login-button"
                type="submit"
              >
                Sign in
              </button>
              <button
                className="btn btn-outline-primary"
                id="forgot-pw-button"
                onClick={[Function]}
                type="button"
              >
                Forgot Password?
              </button>
            </div>
            <ErrorMessage />
          </form>
        </Form>
      </Formik>
    </OauthLogin>
  </LoginForm>
  <AccountCreationForm>
    <OauthLogin>
      <SocialButtons
        className="my-3"
        popupWindow={
          Object {
            "close": [Function],
            "open": [Function],
          }
        }
      >
        <div
          className="my-3"
        >
          <style>
            
          .facebook-login-btn-3kdic7az9 {
            color: white !important;
            background-color: #4267b2 !important;
            border-color: #4267b2 !important;
          }
          .facebook-login-btn-3kdic7az9:hover {
            color: #4267b2 !important;
            background-color: white !important;
          }

          .google-login-btn-3kdic7az9 {
            color: white !important;
            background-color: #ea4335 !important;
            border-color: #ea4335 !important;
          }
          .google-login-btn-3kdic7az9:hover {
            color: #ea4335 !important;
            background-color: white !important;
          }

          .github-login-btn-3kdic7az9 {
            color: white !important;
            background-color: rgb(21, 20, 19) !important;
            border-color: rgb(21, 20, 19) !important;
          }
          .github-login-btn-3kdic7az9:hover {
            color: rgb(21, 20, 19) !important;
            background-color: white !important;
          }
      
          </style>
          <SocialLoginButton
            buttonClasses="github-login-btn-3kdic7az9"
            onClick={[Function]}
          >
            <div
              className="d-flex justify-content-center my-2"
            >
              <button
                className="btn btn-block btn-outline-primary d-flex align-items-center justify-content-between github-login-btn-3kdic7az9"
                onClick={[Function]}
              >
                <GithubLogo
                  size="2em"
                >
                  <Icon
                    fill="currentColor"
                    icon={
                      Object {
                        "children": Array [
                          Object {
                            "attribs": Object {},
                            "children": Array [],
                            "name": "title",
                          },
                          Object {
                            "attribs": Object {},
                            "children": Array [],
                            "name": "desc",
                          },
                          Object {
                            "attribs": Object {},
                            "children": Array [],
                            "name": "defs",
                          },
                          Object {
                            "attribs": Object {
                              "fill": "none",
                              "fill-rule": "evenodd",
                              "id": "Octicons",
                              "stroke": "none",
                              "stroke-width": "1",
                            },
                            "children": Array [
                              Object {
                                "attribs": Object {
                                  "fill": "#000000",
                                  "id": "mark-github",
                                },
                                "children": Array [
                                  Object {
                                    "attribs": Object {
                                      "fill": "#000000",
                                      "id": "mark-github",
                                    },
                                    "children": Array [
                                      Object {
                                        "attribs": Object {
                                          "d": "M8,0 C3.58,0 0,3.58 0,8 C0,11.54 2.29,14.53 5.47,15.59 C5.87,15.66 6.02,15.42 6.02,15.21 C6.02,15.02 6.01,14.39 6.01,13.72 C4,14.09 3.48,13.23 3.32,12.78 C3.23,12.55 2.84,11.84 2.5,11.65 C2.22,11.5 1.82,11.13 2.49,11.12 C3.12,11.11 3.57,11.7 3.72,11.94 C4.44,13.15 5.59,12.81 6.05,12.6 C6.12,12.08 6.33,11.73 6.56,11.53 C4.78,11.33 2.92,10.64 2.92,7.58 C2.92,6.71 3.23,5.99 3.74,5.43 C3.66,5.23 3.38,4.41 3.82,3.31 C3.82,3.31 4.49,3.1 6.02,4.13 C6.66,3.95 7.34,3.86 8.02,3.86 C8.7,3.86 9.38,3.95 10.02,4.13 C11.55,3.09 12.22,3.31 12.22,3.31 C12.66,4.41 12.38,5.23 12.3,5.43 C12.81,5.99 13.12,6.7 13.12,7.58 C13.12,10.65 11.25,11.33 9.47,11.53 C9.76,11.78 10.01,12.26 10.01,13.01 C10.01,14.08 10,14.94 10,15.21 C10,15.42 10.15,15.67 10.55,15.59 C13.71,14.53 16,11.53 16,8 C16,3.58 12.42,0 8,0 L8,0 Z",
                                          "id": "Shape",
                                        },
                                        "children": Array [
                                          Object {
                                            "attribs": Object {
                                              "d": "M8,0 C3.58,0 0,3.58 0,8 C0,11.54 2.29,14.53 5.47,15.59 C5.87,15.66 6.02,15.42 6.02,15.21 C6.02,15.02 6.01,14.39 6.01,13.72 C4,14.09 3.48,13.23 3.32,12.78 C3.23,12.55 2.84,11.84 2.5,11.65 C2.22,11.5 1.82,11.13 2.49,11.12 C3.12,11.11 3.57,11.7 3.72,11.94 C4.44,13.15 5.59,12.81 6.05,12.6 C6.12,12.08 6.33,11.73 6.56,11.53 C4.78,11.33 2.92,10.64 2.92,7.58 C2.92,6.71 3.23,5.99 3.74,5.43 C3.66,5.23 3.38,4.41 3.82,3.31 C3.82,3.31 4.49,3.1 6.02,4.13 C6.66,3.95 7.34,3.86 8.02,3.86 C8.7,3.86 9.38,3.95 10.02,4.13 C11.55,3.09 12.22,3.31 12.22,3.31 C12.66,4.41 12.38,5.23 12.3,5.43 C12.81,5.99 13.12,6.7 13.12,7.58 C13.12,10.65 11.25,11.33 9.47,11.53 C9.76,11.78 10.01,12.26 10.01,13.01 C10.01,14.08 10,14.94 10,15.21 C10,15.42 10.15,15.67 10.55,15.59 C13.71,14.53 16,11.53 16,8 C16,3.58 12.42,0 8,0 L8,0 Z",
                                              "id": "Shape",
                                            },
                                            "children": Array [],
                                            "name": "path",
                                          },
                                        ],
                                        "name": "path",
                                      },
                                    ],
                                    "name": "g",
                                  },
                                ],
                                "name": "g",
                              },
                            ],
                            "name": "g",
                          },
                        ],
                        "viewBox": "0 0 16 16",
                      }
                    }
                    size="2em"
                    tag="i"
                  >
                    <i
                      fill="currentColor"
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <SvgIcon
                        icon={
                          Object {
                            "children": Array [
                              Object {
                                "attribs": Object {},
                                "children": Array [],
                                "name": "title",
                              },
                              Object {
                                "attribs": Object {},
                                "children": Array [],
                                "name": "desc",
                              },
                              Object {
                                "attribs": Object {},
                                "children": Array [],
                                "name": "defs",
                              },
                              Object {
                                "attribs": Object {
                                  "fill": "none",
                                  "fill-rule": "evenodd",
                                  "id": "Octicons",
                                  "stroke": "none",
                                  "stroke-width": "1",
                                },
                                "children": Array [
                                  Object {
                                    "attribs": Object {
                                      "fill": "#000000",
                                      "id": "mark-github",
                                    },
                                    "children": Array [
                                      Object {
                                        "attribs": Object {
                                          "fill": "#000000",
                                          "id": "mark-github",
                                        },
                                        "children": Array [
                                          Object {
                                            "attribs": Object {
                                              "d": "M8,0 C3.58,0 0,3.58 0,8 C0,11.54 2.29,14.53 5.47,15.59 C5.87,15.66 6.02,15.42 6.02,15.21 C6.02,15.02 6.01,14.39 6.01,13.72 C4,14.09 3.48,13.23 3.32,12.78 C3.23,12.55 2.84,11.84 2.5,11.65 C2.22,11.5 1.82,11.13 2.49,11.12 C3.12,11.11 3.57,11.7 3.72,11.94 C4.44,13.15 5.59,12.81 6.05,12.6 C6.12,12.08 6.33,11.73 6.56,11.53 C4.78,11.33 2.92,10.64 2.92,7.58 C2.92,6.71 3.23,5.99 3.74,5.43 C3.66,5.23 3.38,4.41 3.82,3.31 C3.82,3.31 4.49,3.1 6.02,4.13 C6.66,3.95 7.34,3.86 8.02,3.86 C8.7,3.86 9.38,3.95 10.02,4.13 C11.55,3.09 12.22,3.31 12.22,3.31 C12.66,4.41 12.38,5.23 12.3,5.43 C12.81,5.99 13.12,6.7 13.12,7.58 C13.12,10.65 11.25,11.33 9.47,11.53 C9.76,11.78 10.01,12.26 10.01,13.01 C10.01,14.08 10,14.94 10,15.21 C10,15.42 10.15,15.67 10.55,15.59 C13.71,14.53 16,11.53 16,8 C16,3.58 12.42,0 8,0 L8,0 Z",
                                              "id": "Shape",
                                            },
                                            "children": Array [
                                              Object {
                                                "attribs": Object {
                                                  "d": "M8,0 C3.58,0 0,3.58 0,8 C0,11.54 2.29,14.53 5.47,15.59 C5.87,15.66 6.02,15.42 6.02,15.21 C6.02,15.02 6.01,14.39 6.01,13.72 C4,14.09 3.48,13.23 3.32,12.78 C3.23,12.55 2.84,11.84 2.5,11.65 C2.22,11.5 1.82,11.13 2.49,11.12 C3.12,11.11 3.57,11.7 3.72,11.94 C4.44,13.15 5.59,12.81 6.05,12.6 C6.12,12.08 6.33,11.73 6.56,11.53 C4.78,11.33 2.92,10.64 2.92,7.58 C2.92,6.71 3.23,5.99 3.74,5.43 C3.66,5.23 3.38,4.41 3.82,3.31 C3.82,3.31 4.49,3.1 6.02,4.13 C6.66,3.95 7.34,3.86 8.02,3.86 C8.7,3.86 9.38,3.95 10.02,4.13 C11.55,3.09 12.22,3.31 12.22,3.31 C12.66,4.41 12.38,5.23 12.3,5.43 C12.81,5.99 13.12,6.7 13.12,7.58 C13.12,10.65 11.25,11.33 9.47,11.53 C9.76,11.78 10.01,12.26 10.01,13.01 C10.01,14.08 10,14.94 10,15.21 C10,15.42 10.15,15.67 10.55,15.59 C13.71,14.53 16,11.53 16,8 C16,3.58 12.42,0 8,0 L8,0 Z",
                                                  "id": "Shape",
                                                },
                                                "children": Array [],
                                                "name": "path",
                                              },
                                            ],
                                            "name": "path",
                                          },
                                        ],
                                        "name": "g",
                                      },
                                    ],
                                    "name": "g",
                                  },
                                ],
                                "name": "g",
                              },
                            ],
                            "viewBox": "0 0 16 16",
                          }
                        }
                        size="2em"
                      >
                        <svg
                          fill="currentColor"
                          height="2em"
                          style={
                            Object {
                              "display": "inline-block",
                              "verticalAlign": "middle",
                            }
                          }
                          viewBox="0 0 16 16"
                          width="2em"
                        >
                          <title
                            key="0"
                          />
                          <desc
                            key="1"
                          />
                          <defs
                            key="2"
                          />
                          <g
                            fill="none"
                            fillRule="evenodd"
                            id="Octicons"
                            key="3"
                            stroke="currentColor"
                            strokeWidth="1"
                          >
                            <g
                              id="mark-github"
                              key="0"
                            >
                              <g
                                id="mark-github"
                                key="0"
                              >
                                <path
                                  d="M8,0 C3.58,0 0,3.58 0,8 C0,11.54 2.29,14.53 5.47,15.59 C5.87,15.66 6.02,15.42 6.02,15.21 C6.02,15.02 6.01,14.39 6.01,13.72 C4,14.09 3.48,13.23 3.32,12.78 C3.23,12.55 2.84,11.84 2.5,11.65 C2.22,11.5 1.82,11.13 2.49,11.12 C3.12,11.11 3.57,11.7 3.72,11.94 C4.44,13.15 5.59,12.81 6.05,12.6 C6.12,12.08 6.33,11.73 6.56,11.53 C4.78,11.33 2.92,10.64 2.92,7.58 C2.92,6.71 3.23,5.99 3.74,5.43 C3.66,5.23 3.38,4.41 3.82,3.31 C3.82,3.31 4.49,3.1 6.02,4.13 C6.66,3.95 7.34,3.86 8.02,3.86 C8.7,3.86 9.38,3.95 10.02,4.13 C11.55,3.09 12.22,3.31 12.22,3.31 C12.66,4.41 12.38,5.23 12.3,5.43 C12.81,5.99 13.12,6.7 13.12,7.58 C13.12,10.65 11.25,11.33 9.47,11.53 C9.76,11.78 10.01,12.26 10.01,13.01 C10.01,14.08 10,14.94 10,15.21 C10,15.42 10.15,15.67 10.55,15.59 C13.71,14.53 16,11.53 16,8 C16,3.58 12.42,0 8,0 L8,0 Z"
                                  id="Shape"
                                  key="0"
                                >
                                  <path
                                    d="M8,0 C3.58,0 0,3.58 0,8 C0,11.54 2.29,14.53 5.47,15.59 C5.87,15.66 6.02,15.42 6.02,15.21 C6.02,15.02 6.01,14.39 6.01,13.72 C4,14.09 3.48,13.23 3.32,12.78 C3.23,12.55 2.84,11.84 2.5,11.65 C2.22,11.5 1.82,11.13 2.49,11.12 C3.12,11.11 3.57,11.7 3.72,11.94 C4.44,13.15 5.59,12.81 6.05,12.6 C6.12,12.08 6.33,11.73 6.56,11.53 C4.78,11.33 2.92,10.64 2.92,7.58 C2.92,6.71 3.23,5.99 3.74,5.43 C3.66,5.23 3.38,4.41 3.82,3.31 C3.82,3.31 4.49,3.1 6.02,4.13 C6.66,3.95 7.34,3.86 8.02,3.86 C8.7,3.86 9.38,3.95 10.02,4.13 C11.55,3.09 12.22,3.31 12.22,3.31 C12.66,4.41 12.38,5.23 12.3,5.43 C12.81,5.99 13.12,6.7 13.12,7.58 C13.12,10.65 11.25,11.33 9.47,11.53 C9.76,11.78 10.01,12.26 10.01,13.01 C10.01,14.08 10,14.94 10,15.21 C10,15.42 10.15,15.67 10.55,15.59 C13.71,14.53 16,11.53 16,8 C16,3.58 12.42,0 8,0 L8,0 Z"
                                    id="Shape"
                                    key="0"
                                  />
                                </path>
                              </g>
                            </g>
                          </g>
                        </svg>
                      </SvgIcon>
                    </i>
                  </Icon>
                </GithubLogo>
                <div
                  className="flex-grow-1 font-weight-bold"
                >
                  Login with GitHub
                </div>
              </button>
            </div>
          </SocialLoginButton>
          <SocialLoginButton
            buttonClasses="facebook-login-btn-3kdic7az9"
            onClick={[Function]}
          >
            <div
              className="d-flex justify-content-center my-2"
            >
              <button
                className="btn btn-block btn-outline-primary d-flex align-items-center justify-content-between facebook-login-btn-3kdic7az9"
                onClick={[Function]}
              >
                <FbLogo
                  size="2em"
                >
                  <Icon
                    fill="currentColor"
                    icon={
                      Object {
                        "children": Array [
                          Object {
                            "attribs": Object {
                              "d": "M1451 128q35 0 60 25t25 60v1366q0 35-25 60t-60 25h-391v-595h199l30-232h-229v-148q0-56 23.5-84t91.5-28l122-1v-207q-63-9-178-9-136 0-217.5 80t-81.5 226v171h-200v232h200v595h-735q-35 0-60-25t-25-60v-1366q0-35 25-60t60-25h1366z",
                            },
                            "name": "path",
                          },
                        ],
                        "viewBox": "0 0 1536 1792",
                      }
                    }
                    size="2em"
                    tag="i"
                  >
                    <i
                      fill="currentColor"
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <SvgIcon
                        icon={
                          Object {
                            "children": Array [
                              Object {
                                "attribs": Object {
                                  "d": "M1451 128q35 0 60 25t25 60v1366q0 35-25 60t-60 25h-391v-595h199l30-232h-229v-148q0-56 23.5-84t91.5-28l122-1v-207q-63-9-178-9-136 0-217.5 80t-81.5 226v171h-200v232h200v595h-735q-35 0-60-25t-25-60v-1366q0-35 25-60t60-25h1366z",
                                },
                                "name": "path",
                              },
                            ],
                            "viewBox": "0 0 1536 1792",
                          }
                        }
                        size="2em"
                      >
                        <svg
                          fill="currentColor"
                          height="2em"
                          style={
                            Object {
                              "display": "inline-block",
                              "verticalAlign": "middle",
                            }
                          }
                          viewBox="0 0 1536 1792"
                          width="2em"
                        >
                          <path
                            d="M1451 128q35 0 60 25t25 60v1366q0 35-25 60t-60 25h-391v-595h199l30-232h-229v-148q0-56 23.5-84t91.5-28l122-1v-207q-63-9-178-9-136 0-217.5 80t-81.5 226v171h-200v232h200v595h-735q-35 0-60-25t-25-60v-1366q0-35 25-60t60-25h1366z"
                            key="0"
                          />
                        </svg>
                      </SvgIcon>
                    </i>
                  </Icon>
                </FbLogo>
                <div
                  className="flex-grow-1 font-weight-bold"
                >
                  Login with Facebook
                </div>
              </button>
            </div>
          </SocialLoginButton>
          <SocialLoginButton
            buttonClasses="google-login-btn-3kdic7az9"
            onClick={[Function]}
          >
            <div
              className="d-flex justify-content-center my-2"
            >
              <button
                className="btn btn-block btn-outline-primary d-flex align-items-center justify-content-between google-login-btn-3kdic7az9"
                onClick={[Function]}
              >
                <GoogleLogo
                  size="2em"
                >
                  <Icon
                    fill="currentColor"
                    icon={
                      Object {
                        "children": Array [
                          Object {
                            "attribs": Object {
                              "d": "M768 786h725q12 67 12 128 0 217-91 387.5t-259.5 266.5-386.5 96q-157 0-299-60.5t-245-163.5-163.5-245-60.5-299 60.5-299 163.5-245 245-163.5 299-60.5q300 0 515 201l-209 201q-123-119-306-119-129 0-238.5 65t-173.5 176.5-64 243.5 64 243.5 173.5 176.5 238.5 65q87 0 160-24t120-60 82-82 51.5-87 22.5-78h-436v-264z",
                            },
                            "name": "path",
                          },
                        ],
                        "viewBox": "0 0 1536 1792",
                      }
                    }
                    size="2em"
                    tag="i"
                  >
                    <i
                      fill="currentColor"
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <SvgIcon
                        icon={
                          Object {
                            "children": Array [
                              Object {
                                "attribs": Object {
                                  "d": "M768 786h725q12 67 12 128 0 217-91 387.5t-259.5 266.5-386.5 96q-157 0-299-60.5t-245-163.5-163.5-245-60.5-299 60.5-299 163.5-245 245-163.5 299-60.5q300 0 515 201l-209 201q-123-119-306-119-129 0-238.5 65t-173.5 176.5-64 243.5 64 243.5 173.5 176.5 238.5 65q87 0 160-24t120-60 82-82 51.5-87 22.5-78h-436v-264z",
                                },
                                "name": "path",
                              },
                            ],
                            "viewBox": "0 0 1536 1792",
                          }
                        }
                        size="2em"
                      >
                        <svg
                          fill="currentColor"
                          height="2em"
                          style={
                            Object {
                              "display": "inline-block",
                              "verticalAlign": "middle",
                            }
                          }
                          viewBox="0 0 1536 1792"
                          width="2em"
                        >
                          <path
                            d="M768 786h725q12 67 12 128 0 217-91 387.5t-259.5 266.5-386.5 96q-157 0-299-60.5t-245-163.5-163.5-245-60.5-299 60.5-299 163.5-245 245-163.5 299-60.5q300 0 515 201l-209 201q-123-119-306-119-129 0-238.5 65t-173.5 176.5-64 243.5 64 243.5 173.5 176.5 238.5 65q87 0 160-24t120-60 82-82 51.5-87 22.5-78h-436v-264z"
                            key="0"
                          />
                        </svg>
                      </SvgIcon>
                    </i>
                  </Icon>
                </GoogleLogo>
                <div
                  className="flex-grow-1 font-weight-bold"
                >
                  Login with Google
                </div>
              </button>
            </div>
          </SocialLoginButton>
        </div>
      </SocialButtons>
      <Formik
        initialValues={
          Object {
            "email": "",
            "password": "",
            "stayLoggedIn": false,
          }
        }
        onSubmit={[Function]}
        validate={[Function]}
      >
        <Form>
          <form
            action="#"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <div
              className="form-label-group mb-2"
            >
              <Component
                flip={true}
              >
                <label
                  htmlFor="um3kfiekd-account-creation-email"
                  key=".1"
                >
                  Email address
                </label>
                <Field
                  autoFocus={true}
                  className="form-control"
                  id="um3kfiekd-account-creation-email"
                  key=".0"
                  name="email"
                  placeholder="Email address"
                  required={true}
                  type="email"
                >
                  <input
                    autoFocus={true}
                    className="form-control"
                    id="um3kfiekd-account-creation-email"
                    name="email"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Email address"
                    required={true}
                    type="email"
                    value=""
                  />
                </Field>
              </Component>
            </div>
            <div
              className="form-label-group mb-2"
            >
              <Component
                flip={true}
              >
                <label
                  htmlFor="um3kfiekd-account-creation-password"
                  key=".1"
                >
                  Password
                </label>
                <Field
                  className="form-control"
                  id="um3kfiekd-account-creation-password"
                  key=".0"
                  name="password"
                  placeholder="Password"
                  required={true}
                  type="password"
                >
                  <input
                    className="form-control"
                    id="um3kfiekd-account-creation-password"
                    name="password"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Password"
                    required={true}
                    type="password"
                    value=""
                  />
                </Field>
              </Component>
            </div>
            <div
              className="custom-control custom-checkbox mb-2"
            >
              <Field
                className="custom-control-input"
                id="um3kfiekd-account-creation-stay-logged-in"
                name="stayLoggedIn"
                type="checkbox"
              >
                <input
                  checked={false}
                  className="custom-control-input"
                  id="um3kfiekd-account-creation-stay-logged-in"
                  name="stayLoggedIn"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="checkbox"
                  value={false}
                />
              </Field>
              <label
                className="custom-control-label"
                htmlFor="um3kfiekd-account-creation-stay-logged-in"
              >
                Remember me
              </label>
            </div>
            <Component
              password=""
              username=""
            />
            <div
              className="mb-3"
            >
              <button
                className="btn btn-primary"
                type="submit"
              >
                Create Account
              </button>
            </div>
          </form>
        </Form>
      </Formik>
      <UserCreateError />
    </OauthLogin>
  </AccountCreationForm>
</div>
`;

exports[`<ReauthenticateGuard> 1`] = `
<div
  id="client-test-div"
>
  <ReauthenticateGuard
    tokenContents="a token"
  >
    <div>
      <ErrorMessage />
      <div
        className="mb-3"
      >
        Please enter your password:
      </div>
      <Formik
        initialValues={
          Object {
            "password": "",
          }
        }
        onSubmit={[Function]}
        validate={[Function]}
      >
        <Form
          id="reauth-guard-form"
        >
          <form
            action="#"
            id="reauth-guard-form"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <div
              className="form-label-group"
            >
              <Field
                autoFocus={true}
                className="form-control"
                id="reauth-guard-password"
                name="password"
                placeholder="password"
                type="password"
              >
                <input
                  autoFocus={true}
                  className="form-control"
                  id="reauth-guard-password"
                  name="password"
                  onBlur={[Function]}
                  onChange={[Function]}
                  placeholder="password"
                  type="password"
                  value=""
                />
              </Field>
            </div>
            <div
              className="d-flex justify-content-between"
            >
              <button
                className="btn btn-primary"
                type="submit"
              >
                Submit
              </button>
              <button
                className="btn btn-secondary"
                onClick={[Function]}
              >
                Cancel
              </button>
            </div>
          </form>
        </Form>
      </Formik>
    </div>
  </ReauthenticateGuard>
</div>
`;

exports[`<ReauthenticateGuard> 2`] = `
<div
  id="client-test-div"
>
  <ReauthenticateGuard
    tokenContents="a token"
  >
    <GuardedComponent>
      <div>
        token: 
        {"id":"915cb3c0-a3ac-44be-a2a8-6edb25bfeacc","userContents":"\\"a token\\"","reauthenticationMethods":["password"],"iat":42}
      </div>
    </GuardedComponent>
  </ReauthenticateGuard>
</div>
`;

exports[`<ResetPasswordForm> 1`] = `
<div
  id="client-test-div"
>
  <ResetPasswordForm
    allowLoginAfterReset={true}
    idPrefix="test"
    onLogin={[MockFunction]}
    token="eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJlbWFpbCI6ImJvYkBib2IuY29tIiwiY3JlZGVudGlhbElkIjoiYTMxZDY4ZTYtODk4Zi00OTk4LTllNmQtMjVlZjFhNjJmNjJjIiwiaWQiOiI5MTVjYjNjMC1hM2FjLTQ0YmUtYTJhOC02ZWRiMjViZmVhY2MiLCJhcHBJZCI6IjI0OGU1NDczLWQ5YTYtNDQ4Ny05MTY0LTI0YzMwNTJkMjg5OCIsImFjdGlvbiI6IlJFU0VUX1BXIiwiaWF0IjoxMDAwfQ."
  >
    <div>
      <ErrorMessage />
      <Formik
        initialValues={
          Object {
            "loginAfterReset": true,
            "newPassword": "",
            "stayLoggedIn": false,
          }
        }
        onSubmit={[Function]}
        validate={[Function]}
      >
        <Form
          id="reset-password-form"
        >
          <form
            action="#"
            id="reset-password-form"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <div
              className="form-label-group"
            >
              <Component
                flip={true}
              >
                <label
                  htmlFor="test-reset-password-new-password"
                  key=".1"
                >
                  New Password
                </label>
                <Field
                  autoFocus={true}
                  className="form-control"
                  id="test-reset-password-new-password"
                  key=".0"
                  name="newPassword"
                  placeholder="New Password"
                  required={true}
                  type="password"
                >
                  <input
                    autoFocus={true}
                    className="form-control"
                    id="test-reset-password-new-password"
                    name="newPassword"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="New Password"
                    required={true}
                    type="password"
                    value=""
                  />
                </Field>
              </Component>
            </div>
            <div
              className="custom-control custom-checkbox mb-3 justify-content-between d-flex"
            >
              <Field
                className="custom-control-input"
                id="test-reset-password-login-after-reset"
                name="loginAfterReset"
                type="checkbox"
              >
                <input
                  checked={true}
                  className="custom-control-input"
                  id="test-reset-password-login-after-reset"
                  name="loginAfterReset"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="checkbox"
                  value={true}
                />
              </Field>
              <label
                className="custom-control-label"
                htmlFor="test-reset-password-login-after-reset"
              >
                Log in now?
              </label>
            </div>
            <div
              className="custom-control custom-checkbox mb-3 justify-content-between d-flex"
            >
              <Field
                className="custom-control-input"
                id="test-reset-password-stay-logged-in"
                name="stayLoggedIn"
                type="checkbox"
              >
                <input
                  checked={false}
                  className="custom-control-input"
                  id="test-reset-password-stay-logged-in"
                  name="stayLoggedIn"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="checkbox"
                  value={false}
                />
              </Field>
              <label
                className="custom-control-label"
                htmlFor="test-reset-password-stay-logged-in"
              >
                Remember me
              </label>
            </div>
            <button
              className="btn btn-primary btn-block"
              type="submit"
            >
              Reset Password
            </button>
          </form>
        </Form>
      </Formik>
    </div>
  </ResetPasswordForm>
</div>
`;

exports[`<ResetPasswordForm> 2`] = `
<div
  id="client-test-div"
>
  <ResetPasswordForm
    allowLoginAfterReset={true}
    idPrefix="test"
    onLogin={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    token="eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJlbWFpbCI6ImJvYkBib2IuY29tIiwiY3JlZGVudGlhbElkIjoiYTMxZDY4ZTYtODk4Zi00OTk4LTllNmQtMjVlZjFhNjJmNjJjIiwiaWQiOiI5MTVjYjNjMC1hM2FjLTQ0YmUtYTJhOC02ZWRiMjViZmVhY2MiLCJhcHBJZCI6IjI0OGU1NDczLWQ5YTYtNDQ4Ny05MTY0LTI0YzMwNTJkMjg5OCIsImFjdGlvbiI6IlJFU0VUX1BXIiwiaWF0IjoxMDAwfQ."
  >
    <div>
      <ErrorMessage />
      <Formik
        initialValues={
          Object {
            "loginAfterReset": true,
            "newPassword": "",
            "stayLoggedIn": false,
          }
        }
        onSubmit={[Function]}
        validate={[Function]}
      >
        <LoginAfterReset
          allowLoginAfterReset={true}
          loginData={
            Object {
              "email": "bob@bob.com",
              "password": "abc123",
              "stayLoggedIn": false,
            }
          }
          onLogin={
            [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
          redirectAfterReset={false}
          svcResetPassword={
            Object {
              "svcResetPassword": Object {
                "__typename": "PasswordResetResult",
                "redirectUri": "/fakeuri",
              },
            }
          }
        >
          <div
            className="alert alert-success"
          >
            <ErrorMessage />
            Your password has been reset successfully.
          </div>
        </LoginAfterReset>
      </Formik>
    </div>
  </ResetPasswordForm>
</div>
`;

exports[`<ResetPasswordForm> invalid token 1`] = `
<div
  id="client-test-div"
>
  <ResetPasswordForm
    token="eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJjcmVkZW50aWFsSWQiOiJhMzFkNjhlNi04OThmLTQ5OTgtOWU2ZC0yNWVmMWE2MmY2MmMiLCJpZCI6IjkxNWNiM2MwLWEzYWMtNDRiZS1hMmE4LTZlZGIyNWJmZWFjYyIsImFwcElkIjoiMjQ4ZTU0NzMtZDlhNi00NDg3LTkxNjQtMjRjMzA1MmQyODk4IiwiYWN0aW9uIjoiUkVTRVRfUFciLCJpYXQiOjEwMDB9."
  >
    <div
      className="alert alert-danger"
    >
      Invalid token 
      <pre>
        eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJjcmVkZW50aWFsSWQiOiJhMzFkNjhlNi04OThmLTQ5OTgtOWU2ZC0yNWVmMWE2MmY2MmMiLCJpZCI6IjkxNWNiM2MwLWEzYWMtNDRiZS1hMmE4LTZlZGIyNWJmZWFjYyIsImFwcElkIjoiMjQ4ZTU0NzMtZDlhNi00NDg3LTkxNjQtMjRjMzA1MmQyODk4IiwiYWN0aW9uIjoiUkVTRVRfUFciLCJpYXQiOjEwMDB9.
      </pre>
    </div>
  </ResetPasswordForm>
</div>
`;
